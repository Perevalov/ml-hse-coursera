Градиентный бустинг:

Общее кол-во строк (матчей): 97230
Следующие признаки имеют пропуски:
    first_blood_time 77677 - нетокторые значения пропущены, т.к. событие первой крови могло не случится в первые 5 минут матча
    first_blood_team 77677 - аналогично first_blood_time
    first_blood_player1 77677 - аналогично first_blood_time
    first_blood_player2 53243 - аналогично first_blood_time (+ второй игрок мог быть не причастен)
    radiant_bottle_time 81539 - аналогично first_blood_time
    radiant_courier_time 96538 - аналогично first_blood_time
    radiant_flying_courier_time 69751 - аналогично first_blood_time
    radiant_first_ward_time 95394 - аналогично first_blood_time
    dire_bottle_time 81087 - аналогично first_blood_time
    dire_courier_time 96554 - аналогично first_blood_time
    dire_flying_courier_time 71132 - аналогично first_blood_time
    dire_first_ward_time 95404 - аналогично first_blood_time

Пропущенные значения были заменены с помощью функции features[f].fillna(999999,inplace=True)

Целевая переменная содержится в столбце - radiant_win

На предложенном кол-ве деревьев (10,20,30) оптимум не был достигнут - оценка по кросс валидации монотонно возрастает:
[0.6660340264507757, 0.6834568680262606, 0.689971021494785, 0.6942794039256139]

Для увеличения точности имеет смысл попробовать увеличить количество деревьев, конечно соблюдая некоторые рамки.
Длительность кросс валидации на 30 деревьях 1 мин 45 сек 63 мсек

Ускорение можно провести используя следующие подходы:
    -апгрейд железа
    -распараллеливание обучения
    -уменьшение выборки при сохранении качества

-------------------------------

Логистическая регрессия:

Результаты подбора параметра С без масштабирования:

0.7163996717364348 __ {'C': 1e-05}
0.7171353313957538 __ {'C': 0.0001} -- (OPTIMUM)
0.7170820489398028 __ {'C': 0.001}
0.7170303513634765 __ {'C': 0.01}
0.7170051337812748 __ {'C': 0.1}
0.7169739949325376 __ {'C': 1.0}
0.7170196937260391 __ {'C': 10.0}
0.7170571808642054 __ {'C': 100.0}
0.7169965327147115 __ {'C': 1000.0}
0.7169826723237126 __ {'C': 10000.0}

С масштабированием:

0.6944525149638671 __ {'C': 1e-05}
0.7120572659148341 __ {'C': 0.0001}
0.7167928115564512 __ {'C': 0.001}
0.7169458068328113 __ {'C': 0.01} -- (OPTIMUM)
0.7169191642068822 __ {'C': 0.1}
0.7169156537772933 __ {'C': 1.0}
0.7169155330348582 __ {'C': 10.0}
0.7169155224275449 __ {'C': 100.0}
0.7169155075970053 __ {'C': 1000.0}
0.7169155075961746 __ {'C': 10000.0}

Время, затраченное на поиск параметра и кросс валидацию является больше, чем аналогичное
в градиентном бустинге (0:02:00.622895 > 0:01:45:542768) так, как в случае логистической регрессии мы производим
кросс-валидацию по каждому исследуемому параметру отдельно.

Качество логистической регрессии оказалось немногим больше чем в градиентном бустинге.

При удалении категориальных признаков точность немногим повысилась:
0:16:04.082967
0.7164016488535655 __ {'C': 1e-05}
0.7171453047980902 __ {'C': 0.0001}
0.7170929212176722 __ {'C': 0.001}
0.7170666119222341 __ {'C': 0.01}
0.717005864628746 __ {'C': 0.1}
0.7170217950861145 __ {'C': 1.0}
0.7170224237325825 __ {'C': 10.0}
0.7170727011907683 __ {'C': 100.0}
0.7170354281724768 __ {'C': 1000.0}
0.7170623079117981 __ {'C': 10000.0}

Всего в датасете 108 уникальных героев

При добавлении мешка слов качество получается следующим:
0:39:26.009509
0.7182254926383624 __ {'C': 1e-05}
0.7289066352758702 __ {'C': 0.0001}
0.7462261720358563 __ {'C': 0.001}
0.751546806855283 __ {'C': 0.01}
0.7519406824254579 __ {'C': 0.1}
0.7520039485928806 __ {'C': 1.0}
0.7519472975299103 __ {'C': 10.0}
0.7519128742589681 __ {'C': 100.0}
0.7519565930045632 __ {'C': 1000.0}
0.7519883644168204 __ {'C': 10000.0}



